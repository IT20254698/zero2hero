"use strict";(self.webpackChunkzero_2_hero=self.webpackChunkzero_2_hero||[]).push([[9792],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return d}});var o=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=o.createContext({}),c=function(e){var t=o.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=c(e.components);return o.createElement(l.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},p=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(r),d=n,g=p["".concat(l,".").concat(d)]||p[d]||f[d]||a;return r?o.createElement(g,i(i({ref:t},u),{},{components:r})):o.createElement(g,i({ref:t},u))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,i=new Array(a);i[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:n,i[1]=s;for(var c=2;c<a;c++)i[c]=r[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,r)}p.displayName="MDXCreateElement"},1510:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return u},default:function(){return p}});var o=r(7462),n=r(3366),a=(r(7294),r(3905)),i=["components"],s={sidebar_position:1},l="Firebase Storage",c={unversionedId:"firebase/firebase-storage",id:"firebase/firebase-storage",isDocsHomePage:!1,title:"Firebase Storage",description:"Cloud Storage for Firebase allows you to quickly and easily upload files to a Cloud Storage bucket provided and managed by Firebase.",source:"@site/docs/firebase/firebase-storage.md",sourceDirName:"firebase",slug:"/firebase/firebase-storage",permalink:"/zero2hero/docs/firebase/firebase-storage",editUrl:"https://github.com/sliit-foss/zero2hero/edit/master/docs/firebase/firebase-storage.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"GitHub Actions",permalink:"/zero2hero/docs/github-actions/github-action"},next:{title:"Docker Orientation and Setup",permalink:"/zero2hero/docs/docker/docker"}},u=[{value:"Create a Reference",id:"create-a-reference",children:[],level:2},{value:"Upload Files",id:"upload-files",children:[],level:2},{value:"How does it work?",id:"how-does-it-work",children:[],level:2}],f={toc:u};function p(e){var t=e.components,r=(0,n.Z)(e,i);return(0,a.kt)("wrapper",(0,o.Z)({},f,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"firebase-storage"},"Firebase Storage"),(0,a.kt)("p",null,"Cloud Storage for Firebase allows you to quickly and easily upload files to a ",(0,a.kt)("a",{parentName:"p",href:"https://cloud.google.com/storage"},"Cloud Storage")," bucket provided and managed by Firebase."),(0,a.kt)("h2",{id:"create-a-reference"},"Create a Reference"),(0,a.kt)("p",null,"In order to upload or download files, delete files, or get or update metadata, you must create a reference to the file you want to operate on. A reference can be thought of as a pointer to a file in the cloud."),(0,a.kt)("p",null,"example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'import { getStorage, ref } from "firebase/storage";\n\n// Get a reference to the storage service, which is used to create references in your storage bucket\nconst storage = getStorage();\n\n// Create a storage reference from our storage service\nconst storageRef = ref(storage);\n')),(0,a.kt)("p",null,"create a reference to a location lower in the tree, say ",(0,a.kt)("inlineCode",{parentName:"p"},"'images/space.jpg'")," by using the ",(0,a.kt)("inlineCode",{parentName:"p"},"child()")," method on an existing reference."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"import { getStorage, ref } from \"firebase/storage\";\n\nconst storage = getStorage();\n\n// Create a child reference\nconst imagesRef = ref(storage, 'images');\n// imagesRef now points to 'images'\n\n// Child references can also take paths delimited by '/'\nconst spaceRef = ref(storage, 'images/space.jpg');\n// spaceRef now points to \"images/space.jpg\"\n// imagesRef still points to \"images\"\n")),(0,a.kt)("h2",{id:"upload-files"},"Upload Files"),(0,a.kt)("p",null,"To upload a file to Cloud Storage, you first create a reference to the full path of the file, including the file name."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"import { getStorage, ref } from \"firebase/storage\";\n\n// Create a root reference\nconst storage = getStorage();\n\n// Create a reference to 'mountains.jpg'\nconst mountainsRef = ref(storage, 'mountains.jpg');\n\n// Create a reference to 'images/mountains.jpg'\nconst mountainImagesRef = ref(storage, 'images/mountains.jpg');\n\n// While the file names are the same, the references point to different files\nmountainsRef.name === mountainImagesRef.name;           // true\nmountainsRef.fullPath === mountainImagesRef.fullPath;   // false \n")),(0,a.kt)("p",null,"Once you've created an appropriate reference, you then call the ",(0,a.kt)("inlineCode",{parentName:"p"},"put()")," method. ",(0,a.kt)("inlineCode",{parentName:"p"},"put()")," takes files via the JavaScript ",(0,a.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/File"},"File")," and ",(0,a.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/Blob"},"Blob")," APIs and uploads them to Cloud Storage."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"import { getStorage, ref, uploadBytes } from \"firebase/storage\";\n\nconst storage = getStorage();\nconst storageRef = ref(storage, 'some-child');\n\n// 'file' comes from the Blob or File API\nuploadBytes(storageRef, file).then((snapshot) => {\n  console.log('Uploaded a blob or file!');\n});\n")),(0,a.kt)("h1",{id:"cloud-functions-for-firebase"},"Cloud Functions for Firebase"),(0,a.kt)("p",null,"Cloud Functions for Firebase is a serverless framework that lets you automatically run backend code in response to events triggered by Firebase features and HTTPS requests."),(0,a.kt)("p",null,"The functions you write can respond to events generated by various Firebase and Google Cloud features, from ",(0,a.kt)("a",{parentName:"p",href:"https://firebase.google.com/docs/functions/auth-events"},"Firebase Authentication triggers")," to ",(0,a.kt)("a",{parentName:"p",href:"https://firebase.google.com/docs/functions/gcp-storage-events"},"Cloud Storage Triggers"),"."),(0,a.kt)("p",null,"Integrate across Firebase features using the ",(0,a.kt)("a",{parentName:"p",href:"https://firebase.google.com/docs/admin/setup"},"Admin SDK")," together with Cloud Functions, and integrate with third-party services by writing your own webhooks. Cloud Functions minimizes boilerplate code, making it easier to use Firebase and Google Cloud inside your function."),(0,a.kt)("h2",{id:"how-does-it-work"},"How does it work?"),(0,a.kt)("p",null,"After you write and deploy a function, Google's servers begin to manage the function immediately. You can fire the function directly with an HTTP request, or, in the case of background functions, Google's servers will listen for events and run the function when it is triggered."),(0,a.kt)("p",null,"As the load increases or decreases, Google responds by rapidly scaling the number of virtual server instances needed to run your function. Each function runs in isolation, in its own environment with its own configuration."))}p.isMDXComponent=!0}}]);